package org.openvasp.client.crypto;

import lombok.val;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * @author Olexandr_Bilovol@epam.com
 */
public class ECDHKeyPairTests {

    /*
        CSHARP_ keys generated by OpenVASP.CSharpClient.Cryptography.ECDH_Key
     */

    private static final String CSHARP_PRIVATE_KEY_1 = "0x1a25586d9f2ae0e0a129f23a58cb82d29b31978473e09c4eac59ecc41f18acf5";
    private static final String CSHARP_PUBLIC_KEY_1 = "0x04fba7640d73126ac06647901dada168762049ec7f3fc869454d4a0194d64f683ec1565a66fa4208aaf07a3ac6deeff0fb60274dfc53d4d823fe625e4c605e40fa";

    private static final String CSHARP_PRIVATE_KEY_2 = "0x5f4476f3053bbe449d5af2238a49eead9d2507c57a4d0d3b60b45ab82642f1c3";
    private static final String CSHARP_PUBLIC_KEY_2 = "0x04c044b13614142bcedcf7f38ee7e58cc3529f4aa570a567c0c6f98850ffb4cc9b00707e6545c2a98e60d445f173d65bea78543f810b9a14745ed214d771358e64";

    private static final String CSHARP_SHARED_SECRET = "0x24146426385d76262122a7e0f7b23679f2da341612b0175999de97efbb5ad99c";

    @Test
    public void checkCSharpCompliance() {
        val ecdh1 = ECDHKeyPair.importPrivateKey(CSHARP_PRIVATE_KEY_1);
        assertThat(ecdh1.getPrivateKey()).isEqualTo(CSHARP_PRIVATE_KEY_1);
        assertThat(ecdh1.getPublicKey()).isEqualTo(CSHARP_PUBLIC_KEY_1);

        val ecdh2 = ECDHKeyPair.importPrivateKey(CSHARP_PRIVATE_KEY_2);
        assertThat(ecdh2.getPrivateKey()).isEqualTo(CSHARP_PRIVATE_KEY_2);
        assertThat(ecdh2.getPublicKey()).isEqualTo(CSHARP_PUBLIC_KEY_2);

        val sharedSecret = ecdh1.generateSharedSecretHex(ecdh2.getPublicKey());
        assertThat(sharedSecret).isEqualTo(CSHARP_SHARED_SECRET);
    }

    @Test
    public void checkSharedSecret() {
        val key1 = ECDHKeyPair.generateKeyPair();
        val key2 = ECDHKeyPair.generateKeyPair();
        val sharedSecret12 = key1.generateSharedSecretHex(key2.getPublicKey());
        val sharedSecret21 = key2.generateSharedSecretHex(key1.getPublicKey());
        assertThat(sharedSecret12).isEqualTo(sharedSecret21);
    }

}
