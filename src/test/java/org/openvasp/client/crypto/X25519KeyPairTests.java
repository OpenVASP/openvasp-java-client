package org.openvasp.client.crypto;

import lombok.val;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * @author Olexandr_Bilovol@epam.com
 */
public class X25519KeyPairTests {

    /*
        CSHARP_ keys generated by OpenVASP.CSharpClient.Cryptography.X25519Key
     */

    private static final String CSHARP_PRIVATE_KEY_1 = "0xe00c2a03aa118d1c9efa0930e1985d70f5f5c174ca4116c4ca4dcdebd3195360";
    private static final String CSHARP_PUBLIC_KEY_1 = "0x58b45841785b6e581c81a44160938f214e4bc83e38df874133699ead2b53c427";

    private static final String CSHARP_PRIVATE_KEY_2 = "0xc875e1b3b36c5a35f42575aedfc432cb66a40fbfe735569b17ffe7c8ac1ba972";
    private static final String CSHARP_PUBLIC_KEY_2 = "0x33b599eaf1b1432106475970809d18cb217d6812cd8460db79eb3dc46a376179";

    private static final String CSHARP_SHARED_SECRET = "0x0a81ec3a381eb888de9b70da9413df0bc378e2964202310f34a73662a33c4502";

    @Test
    public void checkGenerate() {
        val key = X25519KeyPair.generateKey();

        val privateKey = key.getPrivateKey();
        assertThat(privateKey).hasSize(66);
        assertThat(privateKey).startsWith("0x");

        val publicKey = key.getPublicKey();
        assertThat(publicKey).hasSize(66);
        assertThat(publicKey).startsWith("0x");
    }

    @Test
    public void checkCSharpCompliance() {
        val pair1 = X25519KeyPair.importPrivateKey(CSHARP_PRIVATE_KEY_1);
        assertThat(pair1.getPrivateKey()).isEqualTo(CSHARP_PRIVATE_KEY_1);
        assertThat(pair1.getPublicKey()).isEqualTo(CSHARP_PUBLIC_KEY_1);

        val pair2 = X25519KeyPair.importPrivateKey(CSHARP_PRIVATE_KEY_2);
        assertThat(pair2.getPrivateKey()).isEqualTo(CSHARP_PRIVATE_KEY_2);
        assertThat(pair2.getPublicKey()).isEqualTo(CSHARP_PUBLIC_KEY_2);

        val sharedSecret = pair1.generateSharedSecretHex(pair2.getPublicKey());
        assertThat(sharedSecret).isEqualTo(CSHARP_SHARED_SECRET);
    }

}
