package org.openvasp.client.service.impl;

import lombok.val;
import lombok.AllArgsConstructor;
import lombok.SneakyThrows;
import org.junit.jupiter.api.Test;
import org.apache.commons.lang3.StringUtils;
import org.bouncycastle.util.encoders.Hex;
import org.skyscreamer.jsonassert.JSONAssert;
import org.web3j.crypto.ECKeyPair;
import org.web3j.utils.Numeric;
import org.openvasp.client.service.ContractService;
import org.openvasp.client.model.EthAddr;
import org.openvasp.client.model.VaspContractInfo;
import org.openvasp.client.common.Json;
import org.openvasp.client.common.VaspUtils;

import java.util.Arrays;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class SignServiceTests {

    @AllArgsConstructor
    private static class SignTestVector {
        String payloadWithSignature;
        String privateSigningKey;
    }

    // test vectors taken from: https://github.com/LykkeBusiness/openvasp-message-samples
    private static final List<SignTestVector> testVectors = Arrays.asList(
            // SessionRequest
            new SignTestVector(
                    "0x7b2268616e647368616b65223a7b22746f70696361223a2230786134333536633430222c2265636468706b223a2230786361663630363238623762303039343339393238383930333938636231316337666635633464383830663763353330343833343537366633653564653036373961366136346235653662343233613336396133633661376537353663313333313138393934643934393036613439303834303838316537623061636331363734227d2c2276617370223a7b226e616d65223a225465737456617370436f6e7472616374506572736f6e222c226964223a22307836626566616630363536623935336231383861306565336266336462303364303764666163653631222c22706b223a22307830343330363164636537386137356139373066653766663239373837303032333933313938333938326362383631356266643966653732633532663030343062366266356531613663313530383531373065616339633538346232626637326436323936393439653765643630636161636366306334663665633064333330613564222c2261646472657373223a7b22737472656574223a22536f6d65205374726565744e616d6520222c226e756d626572223a223634222c226164726c696e65223a22536f6d6520416464726573734c696e65222c22706f7374636f6465223a22333130303331222c22746f776e223a22546f776e4e222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223230323030343238222c22626972746863697479223a22546f776e2058222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a312c226e61746964223a224944222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22313130222c226d73676964223a2230786461373730323338323930613735343038623833393764303930356432316266222c2273657373696f6e223a2230783865383636376230346437656634346238616535363137623437326130313038222c22636f6465223a2231227d2c22636f6d6d656e74223a22227dcd53938760e6585d3e1a9b428d27f8c33a81061e45bc3aca2ebe3b95fe55fbce637365cd1288a3f1326506563244e6b5412b8a6f186dc47a7a881415a86954371b",
                    "0x790a3437381e0ca44a71123d56dc64a6209542ddd58e5a56ecdb13134e86f7c6"
            ),
            
            // SessionReply
            new SignTestVector(
                    "0x7b2268616e647368616b65223a7b22746f70696362223a2230783735636531653335227d2c2276617370223a7b226e616d65223a22546573744f70656e566173704a7572222c226964223a22307830384644613933314436346231376333614346666233354331423339303265304242423465453543222c22706b223a22307830346436643138643738396663316336316665623363383433343265386534666631616236353066636261666232393230376630386364616434373535393732343833626265323466663035326139376666623235633662353631333964363466326636393436626466373738303764656566653361623031326465633335396331222c2261646472657373223a7b22737472656574223a224a75725374726565744e616d65222c226e756d626572223a22313234222c226164726c696e65223a224a7572416464726573734c696e65222c22706f7374636f6465223a2232313030303030222c22746f776e223a22546f776e4e2d31222c22636f756e747279223a224445227d2c226a7572223a5b7b226a757269645f74797065223a352c226a75726964223a224944222c226a757269645f636f756e747279223a224445222c226a757269645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22313530222c226d73676964223a2230783636346165393364363537626435343061303636363465643932643666373334222c2273657373696f6e223a2230783865383636376230346437656634346238616535363137623437326130313038222c22636f6465223a2231227d2c22636f6d6d656e74223a22227d53b3e70fa97601faa01c280ebab86f87e8dda25dde09c9b7e6443aee066a2093118e4ba93a715fe6bbcd4d1882ce9b97181215dd2d16e0712efe4860a65e98221c",
                    "0x6854a4e4f8945d9fa215646a820fe9a866b5635ffc7cfdac29711541f7b913f9"
            ),
            
            // TransferRequest
            new SignTestVector(
                    "0x7b226f726967696e61746f72223a7b226e616d65223a22546573742076616e206465722054657374222c227661616e223a22376466616365363135323465653366623038323830393564222c2261646472657373223a7b22737472656574223a2253747265657458222c226e756d626572223a223434222c226164726c696e65223a22416464726573734c696e6558222c22706f7374636f6465223a22353130303531222c22746f776e223a22546f776e58222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223139393030343238222c22626972746863697479223a22546f776e58222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a322c226e61746964223a224964222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c2262656e6566696369617279223a7b226e616d65223a226e616d65222c227661616e223a22424242346545354335323465653366623038323830393730227d2c227472616e73666572223a7b227661223a22425443222c227474797065223a312c22616d6f756e74223a3132332e307d2c2276617370223a7b226e616d65223a225465737456617370436f6e7472616374506572736f6e222c226964223a22307836626566616630363536623935336231383861306565336266336462303364303764666163653631222c22706b223a22307830343330363164636537386137356139373066653766663239373837303032333933313938333938326362383631356266643966653732633532663030343062366266356531613663313530383531373065616339633538346232626637326436323936393439653765643630636161636366306334663665633064333330613564222c2261646472657373223a7b22737472656574223a22536f6d65205374726565744e616d6520222c226e756d626572223a223634222c226164726c696e65223a22536f6d6520416464726573734c696e65222c22706f7374636f6465223a22333130303331222c22746f776e223a22546f776e4e222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223230323030343238222c22626972746863697479223a22546f776e2058222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a312c226e61746964223a224944222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22323130222c226d73676964223a2230786239653131316235313336626232343462363734656339373863326336343434222c2273657373696f6e223a2230786136326561656265643734333030343438623965366264383961336138663665222c22636f6465223a2231227d2c22636f6d6d656e74223a22227d244a8fe03d2574dd990d0fe43afeea4df99f21fbefc0c2c74e8b90736f435ccd0cdfaad2463f4d76f2a7be35a63a10e6d75c34e7c62ef8afcb1e7ffdca89ae351b",
                    "0x790a3437381e0ca44a71123d56dc64a6209542ddd58e5a56ecdb13134e86f7c6"
            ),
            
            // TransferReply
            new SignTestVector(
                    "0x7b226f726967696e61746f72223a7b226e616d65223a22546573742076616e206465722054657374222c227661616e223a22376466616365363135323465653366623038323830393564222c2261646472657373223a7b22737472656574223a2253747265657458222c226e756d626572223a223434222c226164726c696e65223a22416464726573734c696e6558222c22706f7374636f6465223a22353130303531222c22746f776e223a22546f776e58222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223139393030343239222c22626972746863697479223a22546f776e58222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a322c226e61746964223a224964222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c2262656e6566696369617279223a7b226e616d65223a226e616d65222c227661616e223a22424242346545354335323465653366623038323830393730227d2c227472616e73666572223a7b2264657374696e6174696f6e223a2264657374222c227661223a22425443222c227474797065223a312c22616d6f756e74223a3132332e307d2c2276617370223a7b226e616d65223a22546573744f70656e566173704a7572222c226964223a22307830384644613933314436346231376333614346666233354331423339303265304242423465453543222c22706b223a22307830346436643138643738396663316336316665623363383433343265386534666631616236353066636261666232393230376630386364616434373535393732343833626265323466663035326139376666623235633662353631333964363466326636393436626466373738303764656566653361623031326465633335396331222c2261646472657373223a7b22737472656574223a224a75725374726565744e616d65222c226e756d626572223a22313234222c226164726c696e65223a224a7572416464726573734c696e65222c22706f7374636f6465223a2232313030303030222c22746f776e223a22546f776e4e2d31222c22636f756e747279223a224445227d2c226a7572223a5b7b226a757269645f74797065223a352c226a75726964223a224944222c226a757269645f636f756e747279223a224445222c226a757269645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22323530222c226d73676964223a2230786236653065303135656363393965346239656637306234343238316466386631222c2273657373696f6e223a2230783234386439383763383365373635343838343066306639643630333266643839222c22636f6465223a2231227d2c22636f6d6d656e74223a22227db007c2827cd9436ec3200d8b8297f6426d4f206f65c1667936f58110448b0bc418126f4c676bcb2b6df45884663207d0c8f3ce35bf1d690a85436b7ba36bf8f61b",
                    "0x6854a4e4f8945d9fa215646a820fe9a866b5635ffc7cfdac29711541f7b913f9"
            ),
            
            // TransferDispatch
            new SignTestVector(
                    "0x7b226f726967696e61746f72223a7b226e616d65223a22546573742076616e206465722054657374222c227661616e223a22376466616365363135323465653366623038323830393564222c2261646472657373223a7b22737472656574223a2253747265657458222c226e756d626572223a223434222c226164726c696e65223a22416464726573734c696e6558222c22706f7374636f6465223a22353130303531222c22746f776e223a22546f776e58222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223139393030343238222c22626972746863697479223a22546f776e58222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a322c226e61746964223a224964222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c2262656e6566696369617279223a7b226e616d65223a2262656e65665f6e616d65222c227661616e223a22424242346545354335323465653366623038323830393730227d2c227472616e73666572223a7b2264657374696e6174696f6e223a2264657374222c227661223a22425443222c227474797065223a312c22616d6f756e74223a3132332e307d2c227478223a7b2274786964223a2268617368222c226461746574696d65223a22323032302d30342d32385430363a30373a33365a222c2273656e64696e67616472223a2273656e64696e675f61646472227d2c2276617370223a7b226e616d65223a225465737456617370436f6e7472616374506572736f6e222c226964223a22307836626566616630363536623935336231383861306565336266336462303364303764666163653631222c22706b223a22307830343330363164636537386137356139373066653766663239373837303032333933313938333938326362383631356266643966653732633532663030343062366266356531613663313530383531373065616339633538346232626637326436323936393439653765643630636161636366306334663665633064333330613564222c2261646472657373223a7b22737472656574223a22536f6d65205374726565744e616d6520222c226e756d626572223a223634222c226164726c696e65223a22536f6d6520416464726573734c696e65222c22706f7374636f6465223a22333130303331222c22746f776e223a22546f776e4e222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223230323030343238222c22626972746863697479223a22546f776e2058222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a312c226e61746964223a224944222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22333130222c226d73676964223a2230783434313964383761383766626262346461613061643661363731663462643665222c2273657373696f6e223a2230786136326561656265643734333030343438623965366264383961336138663665222c22636f6465223a2231227d2c22636f6d6d656e74223a22227d57380c91fb1e91ffd14326519e8c94e62017945f94a59537b0e0080099d7274c1cb66b7590c43df55e8e5071a65385aeea633498c14d181356569270778ad4e61b",
                    "0x790a3437381e0ca44a71123d56dc64a6209542ddd58e5a56ecdb13134e86f7c6"
            ),
            
            // TransferConfirmation
            new SignTestVector(
                    "0x7b226f726967696e61746f72223a7b226e616d65223a22546573742076616e206465722054657374222c227661616e223a22376466616365363135323465653366623038323830393564222c2261646472657373223a7b22737472656574223a2253747265657458222c226e756d626572223a223434222c226164726c696e65223a22416464726573734c696e6558222c22706f7374636f6465223a22353130303531222c22746f776e223a22546f776e58222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223139393030343330222c22626972746863697479223a22546f776e58222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a322c226e61746964223a224964222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c2262656e6566696369617279223a7b226e616d65223a226e616d65222c227661616e223a22424242346545354335323465653366623038323830393730227d2c227472616e73666572223a7b2264657374696e6174696f6e223a2264657374222c227661223a22425443222c227474797065223a312c22616d6f756e74223a3132332e307d2c227478223a7b2274786964223a2274786964222c226461746574696d65223a22323032302d30342d33305430363a33353a33365a222c2273656e64696e67616472223a2273656e64696e6761646472227d2c2276617370223a7b226e616d65223a22546573744f70656e566173704a7572222c226964223a22307830384644613933314436346231376333614346666233354331423339303265304242423465453543222c22706b223a22307830346436643138643738396663316336316665623363383433343265386534666631616236353066636261666232393230376630386364616434373535393732343833626265323466663035326139376666623235633662353631333964363466326636393436626466373738303764656566653361623031326465633335396331222c2261646472657373223a7b22737472656574223a224a75725374726565744e616d65222c226e756d626572223a22313234222c226164726c696e65223a224a7572416464726573734c696e65222c22706f7374636f6465223a2232313030303030222c22746f776e223a22546f776e4e2d31222c22636f756e747279223a224445227d2c226a7572223a5b7b226a757269645f74797065223a352c226a75726964223a224944222c226a757269645f636f756e747279223a224445222c226a757269645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22333530222c226d73676964223a2230783563643736623231356433303461346438363830323932383337346132313863222c2273657373696f6e223a2230786633343930633634656466316536343339303233613366376632326564373138222c22636f6465223a2231227d2c22636f6d6d656e74223a22227d052b676ae9b6688a810a12afce96cfe90b81906c0e96bfaf1ca4d8e9bea4d7692f8df3b26ba472de8d24d38d63112ef2f69af1b8f6a21a50d22f25cb7c1e99bc1c",
                    "0x6854a4e4f8945d9fa215646a820fe9a866b5635ffc7cfdac29711541f7b913f9"
            ),
            
            // Termination
            new SignTestVector(
                    "0x7b2276617370223a7b226e616d65223a225465737456617370436f6e7472616374506572736f6e222c226964223a22307836626566616630363536623935336231383861306565336266336462303364303764666163653631222c22706b223a22307830343330363164636537386137356139373066653766663239373837303032333933313938333938326362383631356266643966653732633532663030343062366266356531613663313530383531373065616339633538346232626637326436323936393439653765643630636161636366306334663665633064333330613564222c2261646472657373223a7b22737472656574223a22536f6d65205374726565744e616d6520222c226e756d626572223a223634222c226164726c696e65223a22536f6d6520416464726573734c696e65222c22706f7374636f6465223a22333130303331222c22746f776e223a22546f776e4e222c22636f756e747279223a224445227d2c226269727468223a7b22626972746864617465223a223230323030343238222c22626972746863697479223a22546f776e2058222c226269727468636f756e747279223a224445227d2c226e6174223a5b7b226e617469645f74797065223a312c226e61746964223a224944222c226e617469645f636f756e747279223a224445222c226e617469645f697373756572223a22227d5d7d2c226d7367223a7b2274797065223a22393130222c226d73676964223a2230783538363862393830386334366365346238383838346234343631313139386236222c2273657373696f6e223a2230786136326561656265643734333030343438623965366264383961336138663665222c22636f6465223a2231227d2c22636f6d6d656e74223a22227d7116989504b782bfc7327b890fdfabec77112f83ee2884cfb8cdc45698f56c165441cc917f93f62b8398c039b4a4f9f93cbc02e11fbc1d0ff34d334857341a061c",
                    "0x790a3437381e0ca44a71123d56dc64a6209542ddd58e5a56ecdb13134e86f7c6"
            )
    );
    
    private interface SignTestContractServiceMock extends ContractService {
        @Override
        default VaspContractInfo getVaspContractInfo(EthAddr vaspSmartContractAddress) {
            return getVaspContractInfo(vaspSmartContractAddress.toVaspCode());
        }
    };
    
    @Test
    @SneakyThrows
    public void testSignatureCreationAndVerification() {
        for (val v : testVectors) {
            // derive public key from private key and create a mock SignService instance
            val keyPair = ECKeyPair.create(Hex.decode(Numeric.cleanHexPrefix(v.privateSigningKey)));
            val derivedPublicKey = Numeric.toHexStringWithPrefix(keyPair.getPublicKey());
            val contractInfo = new VaspContractInfo();
            contractInfo.setSigningKey(derivedPublicKey);
            SignTestContractServiceMock csMock = (vc) -> { return contractInfo; };
            val signService = new SignServiceImpl(csMock);
            
            // create signature from original payload and verify if it's same as the original signature
            val payloadWithoutSignature = StringUtils.left(v.payloadWithSignature, 
                    v.payloadWithSignature.length() - SignServiceImpl.SIGNATURE_LENGTH);
            val originalSignature = v.payloadWithSignature.substring(payloadWithoutSignature.length());
            val recalculatedSignature = signService.signPayload(payloadWithoutSignature, v.privateSigningKey);
            assertThat(recalculatedSignature).isEqualTo(originalSignature);
            
            // verify original signature against original payload and, if correct, validate and extract the message
            val vaspMsg = signService.extractSignedMessage(v.payloadWithSignature);
            
            val originalJson = VaspUtils.hexStrDecode(payloadWithoutSignature);
            val recreatedJson = Json.toJson(vaspMsg);
            
            JSONAssert.assertEquals(
                    originalJson,
                    recreatedJson,
                    false);
        }
    }
}